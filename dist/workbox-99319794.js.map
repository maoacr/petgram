{"version":3,"file":"workbox-99319794.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/utils/pluginUtils.js","node_modules/workbox-core/_private/cacheWrapper.js","node_modules/workbox-core/_private/fetchWrapper.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/utils/messages.js","node_modules/workbox-strategies/CacheFirst.js","node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","node_modules/workbox-strategies/NetworkFirst.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/utils/getCacheKeyForURL.js","node_modules/workbox-precaching/utils/addFetchListener.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/utils/precachePlugins.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:5.1.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed with an HTTP ` +\n            `status of ${status}.`;\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:5.1.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle (this is usually\n     *     from a fetch event, but it does not have to be).\n     * @param {FetchEvent} [options.event] The event that triggered the request,\n     *     if applicable.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const { params, route } = this.findMatchingRoute({ url, request, event });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        if (!handler && this._defaultHandler) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler.`);\n            }\n            handler = this._defaultHandler;\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        if (responsePromise instanceof Promise && this._catchHandler) {\n            responsePromise = responsePromise.catch((err) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Still include URL here as it will be async from the console group\n                    // and may not make sense without the URL\n                    logger.groupCollapsed(`Error thrown when responding to: ` +\n                        ` ${getFriendlyURL(url)}. Falling back to Catch Handler.`);\n                    logger.error(`Error thrown by:`, route);\n                    logger.error(err);\n                    logger.groupEnd();\n                }\n                return this._catchHandler.handle({ url, request, event });\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request The request to match.\n     * @param {Event} [options.event] The corresponding event (unless N/A).\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(url, URL, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.url',\n            });\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.request',\n            });\n        }\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            const matchResult = route.match({ url, request, event });\n            if (matchResult) {\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setDefaultHandler(handler) {\n        this._defaultHandler = normalizeHandler(handler);\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const pluginUtils = {\n    filter: (plugins, callbackName) => {\n        return plugins.filter((plugin) => callbackName in plugin);\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './assert.js';\nimport { executeQuotaErrorCallbacks } from './executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './getFriendlyURL.js';\nimport { logger } from './logger.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport { WorkboxError } from './WorkboxError.js';\nimport '../_version.js';\n/**\n * Checks the list of plugins for the cacheKeyWillBeUsed callback, and\n * executes any of those callbacks found in sequence. The final `Request` object\n * returned by the last plugin is treated as the cache key for cache reads\n * and/or writes.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {string} options.mode\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Request>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _getEffectiveRequest = async ({ request, mode, plugins = [], }) => {\n    const cacheKeyWillBeUsedPlugins = pluginUtils.filter(plugins, \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */);\n    let effectiveRequest = request;\n    for (const plugin of cacheKeyWillBeUsedPlugins) {\n        effectiveRequest = await plugin[\"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */].call(plugin, { mode, request: effectiveRequest });\n        if (typeof effectiveRequest === 'string') {\n            effectiveRequest = new Request(effectiveRequest);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(effectiveRequest, Request, {\n                moduleName: 'Plugin',\n                funcName: \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */,\n                isReturnValueProblem: true,\n            });\n        }\n    }\n    return effectiveRequest;\n};\n/**\n * This method will call cacheWillUpdate on the available plugins (or use\n * status === 200) to determine if the Response is safe and valid to cache.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _isResponseSafeToCache = async ({ request, response, event, plugins = [], }) => {\n    let responseToCache = response;\n    let pluginsUsed = false;\n    for (const plugin of plugins) {\n        if (\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */ in plugin) {\n            pluginsUsed = true;\n            const pluginMethod = plugin[\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */];\n            responseToCache = await pluginMethod.call(plugin, {\n                request,\n                response: responseToCache,\n                event,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    assert.isInstance(responseToCache, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cacheWillUpdate\" /* CACHE_WILL_UPDATE */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n            if (!responseToCache) {\n                break;\n            }\n        }\n    }\n    if (!pluginsUsed) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (responseToCache) {\n                if (responseToCache.status !== 200) {\n                    if (responseToCache.status === 0) {\n                        logger.warn(`The response for '${request.url}' is an opaque ` +\n                            `response. The caching strategy that you're using will not ` +\n                            `cache opaque responses by default.`);\n                    }\n                    else {\n                        logger.debug(`The response for '${request.url}' returned ` +\n                            `a status code of '${response.status}' and won't be cached as a ` +\n                            `result.`);\n                    }\n                }\n            }\n        }\n        responseToCache = responseToCache && responseToCache.status === 200 ?\n            responseToCache : undefined;\n    }\n    return responseToCache ? responseToCache : null;\n};\n/**\n * This is a wrapper around cache.match().\n *\n * @param {Object} options\n * @param {string} options.cacheName Name of the cache to match against.\n * @param {Request} options.request The Request that will be used to look up\n *     cache entries.\n * @param {Event} [options.event] The event that prompted the action.\n * @param {Object} [options.matchOptions] Options passed to cache.match().\n * @param {Array<Object>} [options.plugins=[]] Array of plugins.\n * @return {Response} A cached response if available.\n *\n * @private\n * @memberof module:workbox-core\n */\nconst matchWrapper = async ({ cacheName, request, event, matchOptions, plugins = [], }) => {\n    const cache = await self.caches.open(cacheName);\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'read'\n    });\n    let cachedResponse = await cache.match(effectiveRequest, matchOptions);\n    if (process.env.NODE_ENV !== 'production') {\n        if (cachedResponse) {\n            logger.debug(`Found a cached response in '${cacheName}'.`);\n        }\n        else {\n            logger.debug(`No cached response found in '${cacheName}'.`);\n        }\n    }\n    for (const plugin of plugins) {\n        if (\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */ in plugin) {\n            const pluginMethod = plugin[\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */];\n            cachedResponse = await pluginMethod.call(plugin, {\n                cacheName,\n                event,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachedResponse) {\n                    assert.isInstance(cachedResponse, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n        }\n    }\n    return cachedResponse;\n};\n/**\n * Wrapper around cache.put().\n *\n * Will call `cacheDidUpdate` on plugins if the cache was updated, using\n * `matchOptions` when determining what the old entry is.\n *\n * @param {Object} options\n * @param {string} options.cacheName\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @param {Object} [options.matchOptions]\n *\n * @private\n * @memberof module:workbox-core\n */\nconst putWrapper = async ({ cacheName, request, response, event, plugins = [], matchOptions, }) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (request.method && request.method !== 'GET') {\n            throw new WorkboxError('attempt-to-cache-non-get-request', {\n                url: getFriendlyURL(request.url),\n                method: request.method,\n            });\n        }\n    }\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'write'\n    });\n    if (!response) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Cannot cache non-existent response for ` +\n                `'${getFriendlyURL(effectiveRequest.url)}'.`);\n        }\n        throw new WorkboxError('cache-put-with-no-response', {\n            url: getFriendlyURL(effectiveRequest.url),\n        });\n    }\n    const responseToCache = await _isResponseSafeToCache({\n        event,\n        plugins,\n        response,\n        request: effectiveRequest,\n    });\n    if (!responseToCache) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' will ` +\n                `not be cached.`, responseToCache);\n        }\n        return;\n    }\n    const cache = await self.caches.open(cacheName);\n    const updatePlugins = pluginUtils.filter(plugins, \"cacheDidUpdate\" /* CACHE_DID_UPDATE */);\n    const oldResponse = updatePlugins.length > 0 ?\n        await matchWrapper({ cacheName, matchOptions, request: effectiveRequest }) :\n        null;\n    if (process.env.NODE_ENV !== 'production') {\n        logger.debug(`Updating the '${cacheName}' cache with a new Response for ` +\n            `${getFriendlyURL(effectiveRequest.url)}.`);\n    }\n    try {\n        await cache.put(effectiveRequest, responseToCache);\n    }\n    catch (error) {\n        // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n        if (error.name === 'QuotaExceededError') {\n            await executeQuotaErrorCallbacks();\n        }\n        throw error;\n    }\n    for (const plugin of updatePlugins) {\n        await plugin[\"cacheDidUpdate\" /* CACHE_DID_UPDATE */].call(plugin, {\n            cacheName,\n            event,\n            oldResponse,\n            newResponse: responseToCache,\n            request: effectiveRequest,\n        });\n    }\n};\nexport const cacheWrapper = {\n    put: putWrapper,\n    match: matchWrapper,\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from './WorkboxError.js';\nimport { logger } from './logger.js';\nimport { assert } from './assert.js';\nimport { getFriendlyURL } from '../_private/getFriendlyURL.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport '../_version.js';\n/**\n * Wrapper around the fetch API.\n *\n * Will call requestWillFetch on available plugins.\n *\n * @param {Object} options\n * @param {Request|string} options.request\n * @param {Object} [options.fetchOptions]\n * @param {ExtendableEvent} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst wrappedFetch = async ({ request, fetchOptions, event, plugins = [], }) => {\n    if (typeof request === 'string') {\n        request = new Request(request);\n    }\n    // We *should* be able to call `await event.preloadResponse` even if it's\n    // undefined, but for some reason, doing so leads to errors in our Node unit\n    // tests. To work around that, explicitly check preloadResponse's value first.\n    if (event instanceof FetchEvent && event.preloadResponse) {\n        const possiblePreloadResponse = await event.preloadResponse;\n        if (possiblePreloadResponse) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Using a preloaded navigation response for ` +\n                    `'${getFriendlyURL(request.url)}'`);\n            }\n            return possiblePreloadResponse;\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(request, Request, {\n            paramName: 'request',\n            expectedClass: Request,\n            moduleName: 'workbox-core',\n            className: 'fetchWrapper',\n            funcName: 'wrappedFetch',\n        });\n    }\n    const failedFetchPlugins = pluginUtils.filter(plugins, \"fetchDidFail\" /* FETCH_DID_FAIL */);\n    // If there is a fetchDidFail plugin, we need to save a clone of the\n    // original request before it's either modified by a requestWillFetch\n    // plugin or before the original request's body is consumed via fetch().\n    const originalRequest = failedFetchPlugins.length > 0 ?\n        request.clone() : null;\n    try {\n        for (const plugin of plugins) {\n            if (\"requestWillFetch\" /* REQUEST_WILL_FETCH */ in plugin) {\n                const pluginMethod = plugin[\"requestWillFetch\" /* REQUEST_WILL_FETCH */];\n                const requestClone = request.clone();\n                request = await pluginMethod.call(plugin, {\n                    request: requestClone,\n                    event,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (request) {\n                        assert.isInstance(request, Request, {\n                            moduleName: 'Plugin',\n                            funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        throw new WorkboxError('plugin-error-request-will-fetch', {\n            thrownError: err,\n        });\n    }\n    // The request can be altered by plugins with `requestWillFetch` making\n    // the original request (Most likely from a `fetch` event) to be different\n    // to the Request we make. Pass both to `fetchDidFail` to aid debugging.\n    const pluginFilteredRequest = request.clone();\n    try {\n        let fetchResponse;\n        // See https://github.com/GoogleChrome/workbox/issues/1796\n        if (request.mode === 'navigate') {\n            fetchResponse = await fetch(request);\n        }\n        else {\n            fetchResponse = await fetch(request, fetchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' returned a response with ` +\n                `status '${fetchResponse.status}'.`);\n        }\n        for (const plugin of plugins) {\n            if (\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */ in plugin) {\n                fetchResponse = await plugin[\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */]\n                    .call(plugin, {\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (fetchResponse) {\n                        assert.isInstance(fetchResponse, Response, {\n                            moduleName: 'Plugin',\n                            funcName: \"fetchDidSucceed\" /* FETCH_DID_SUCCEED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n        return fetchResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' threw an error.`, error);\n        }\n        for (const plugin of failedFetchPlugins) {\n            await plugin[\"fetchDidFail\" /* FETCH_DID_FAIL */].call(plugin, {\n                error,\n                event,\n                originalRequest: originalRequest.clone(),\n                request: pluginFilteredRequest.clone(),\n            });\n        }\n        throw error;\n    }\n};\nconst fetchWrapper = {\n    fetch: wrappedFetch,\n};\nexport { fetchWrapper };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:5.1.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network}\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass CacheFirst {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'CacheFirst',\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        let error;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this._cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await this._getFromNetwork(request, event);\n            }\n            catch (err) {\n                error = err;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this._cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('CacheFirst', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n    /**\n     * Handles the network and cache part of CacheFirst.\n     *\n     * @param {Request} request\n     * @param {Event} [event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getFromNetwork(request, event) {\n        const response = await fetchWrapper.fetch({\n            request,\n            event,\n            fetchOptions: this._fetchOptions,\n            plugins: this._plugins,\n        });\n        // Keep the service worker while we put the request to the cache\n        const responseClone = response.clone();\n        const cachePutPromise = cacheWrapper.put({\n            cacheName: this._cacheName,\n            request,\n            response: responseClone,\n            event,\n            plugins: this._plugins,\n        });\n        if (event) {\n            try {\n                event.waitUntil(cachePutPromise);\n            }\n            catch (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to ensure service worker stays alive when ` +\n                        `updating cache for '${getFriendlyURL(request.url)}'.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache}\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass NetworkFirst {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} options.networkTimeoutSeconds If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        if (options.plugins) {\n            const isUsingCacheWillUpdate = options.plugins.some((plugin) => !!plugin.cacheWillUpdate);\n            this._plugins = isUsingCacheWillUpdate ?\n                options.plugins : [cacheOkAndOpaquePlugin, ...options.plugins];\n        }\n        else {\n            // No plugins passed in, use the default plugin.\n            this._plugins = [cacheOkAndOpaquePlugin];\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: 'NetworkFirst',\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'NetworkFirst',\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, event, logs });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({ timeoutId, request, event, logs });\n        promises.push(networkPromise);\n        // Promise.race() will resolve as soon as the first promise resolves.\n        let response = await Promise.race(promises);\n        // If Promise.race() resolved with null, it might be due to a network\n        // timeout + a cache miss. If that were to happen, we'd rather wait until\n        // the networkPromise resolves instead of returning null.\n        // Note that it's fine to await an already-resolved promise, so we don't\n        // have to check to see if it's still \"in flight\".\n        if (!response) {\n            response = await networkPromise;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('NetworkFirst', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, event }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await this._respondFromCache({ request, event }));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, event }) {\n        let error;\n        let response;\n        try {\n            response = await fetchWrapper.fetch({\n                request,\n                event,\n                fetchOptions: this._fetchOptions,\n                plugins: this._plugins,\n            });\n        }\n        catch (err) {\n            error = err;\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await this._respondFromCache({ request, event });\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this._cacheName}'` +\n                        ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this._cacheName}' cache.`);\n                }\n            }\n        }\n        else {\n            // Keep the service worker alive while we put the request in the cache\n            const responseClone = response.clone();\n            const cachePut = cacheWrapper.put({\n                cacheName: this._cacheName,\n                request,\n                response: responseClone,\n                event,\n                plugins: this._plugins,\n            });\n            if (event) {\n                try {\n                    // The event has been responded to so we can keep the SW alive to\n                    // respond to the request\n                    event.waitUntil(cachePut);\n                }\n                catch (err) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.warn(`Unable to ensure service worker stays alive when ` +\n                            `updating cache for '${getFriendlyURL(request.url)}'.`);\n                    }\n                }\n            }\n        }\n        return response;\n    }\n    /**\n     * Used if the network timeouts or fails to make the request.\n     *\n     * @param {Object} options\n     * @param {Request} request The request to match in the cache\n     * @param {Event} [options.event]\n     * @return {Promise<Object>}\n     *\n     * @private\n     */\n    _respondFromCache({ event, request }) {\n        return cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:5.1.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {string} [cacheName] An optional name for the cache, to override\n     * the default precache name.\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheNames.getPrecacheName(cacheName);\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {\n     * Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>\n     * } entries Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * @param {Object} options\n     * @param {Event} [options.event] The install event (if needed).\n     * @param {Array<Object>} [options.plugins] Plugins to be used for fetching\n     * and caching during install.\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    async install({ event, plugins } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (plugins) {\n                assert.isArray(plugins, {\n                    moduleName: 'workbox-precaching',\n                    className: 'PrecacheController',\n                    funcName: 'install',\n                    paramName: 'plugins',\n                });\n            }\n        }\n        const toBePrecached = [];\n        const alreadyPrecached = [];\n        const cache = await self.caches.open(this._cacheName);\n        const alreadyCachedRequests = await cache.keys();\n        const existingCacheKeys = new Set(alreadyCachedRequests.map((request) => request.url));\n        for (const [url, cacheKey] of this._urlsToCacheKeys) {\n            if (existingCacheKeys.has(cacheKey)) {\n                alreadyPrecached.push(url);\n            }\n            else {\n                toBePrecached.push({ cacheKey, url });\n            }\n        }\n        const precacheRequests = toBePrecached.map(({ cacheKey, url }) => {\n            const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n            const cacheMode = this._urlsToCacheModes.get(url);\n            return this._addURLToCache({\n                cacheKey,\n                cacheMode,\n                event,\n                integrity,\n                plugins,\n                url,\n            });\n        });\n        await Promise.all(precacheRequests);\n        const updatedURLs = toBePrecached.map((item) => item.url);\n        if (process.env.NODE_ENV !== 'production') {\n            printInstallDetails(updatedURLs, alreadyPrecached);\n        }\n        return {\n            updatedURLs,\n            notUpdatedURLs: alreadyPrecached,\n        };\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    async activate() {\n        const cache = await self.caches.open(this._cacheName);\n        const currentlyCachedRequests = await cache.keys();\n        const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n        const deletedURLs = [];\n        for (const request of currentlyCachedRequests) {\n            if (!expectedCacheKeys.has(request.url)) {\n                await cache.delete(request);\n                deletedURLs.push(request.url);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            printCleanupDetails(deletedURLs);\n        }\n        return { deletedURLs };\n    }\n    /**\n     * Requests the entry and saves it to the cache if the response is valid.\n     * By default, any response with a status code of less than 400 (including\n     * opaque responses) is considered valid.\n     *\n     * If you need to use custom criteria to determine what's valid and what\n     * isn't, then pass in an item in `options.plugins` that implements the\n     * `cacheWillUpdate()` lifecycle event.\n     *\n     * @private\n     * @param {Object} options\n     * @param {string} options.cacheKey The string to use a cache key.\n     * @param {string} options.url The URL to fetch and cache.\n     * @param {string} [options.cacheMode] The cache mode for the network request.\n     * @param {Event} [options.event] The install event (if passed).\n     * @param {Array<Object>} [options.plugins] An array of plugins to apply to\n     * fetch and caching.\n     * @param {string} [options.integrity] The value to use for the `integrity`\n     * field when making the request.\n     */\n    async _addURLToCache({ cacheKey, url, cacheMode, event, plugins, integrity }) {\n        const request = new Request(url, {\n            integrity,\n            cache: cacheMode,\n            credentials: 'same-origin',\n        });\n        let response = await fetchWrapper.fetch({\n            event,\n            plugins,\n            request,\n        });\n        // Allow developers to override the default logic about what is and isn't\n        // valid by passing in a plugin implementing cacheWillUpdate(), e.g.\n        // a `CacheableResponsePlugin` instance.\n        let cacheWillUpdatePlugin;\n        for (const plugin of (plugins || [])) {\n            if ('cacheWillUpdate' in plugin) {\n                cacheWillUpdatePlugin = plugin;\n            }\n        }\n        const isValidResponse = cacheWillUpdatePlugin ?\n            // Use a callback if provided. It returns a truthy value if valid.\n            // NOTE: invoke the method on the plugin instance so the `this` context\n            // is correct.\n            await cacheWillUpdatePlugin.cacheWillUpdate({ event, request, response }) :\n            // Otherwise, default to considering any response status under 400 valid.\n            // This includes, by default, considering opaque responses valid.\n            response.status < 400;\n        // Consider this a failure, leading to the `install` handler failing, if\n        // we get back an invalid response.\n        if (!isValidResponse) {\n            throw new WorkboxError('bad-precaching-response', {\n                url,\n                status: response.status,\n            });\n        }\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        if (response.redirected) {\n            response = await copyResponse(response);\n        }\n        await cacheWrapper.put({\n            event,\n            plugins,\n            response,\n            // `request` already uses `url`. We may be able to reuse it.\n            request: cacheKey === url ? request : new Request(cacheKey),\n            cacheName: this._cacheName,\n            matchOptions: {\n                ignoreSearch: true,\n            },\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this._cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that can be used within a\n     * {@link module:workbox-routing.Route} that will find a response for the\n     * incoming request against the precache.\n     *\n     * If for an unexpected reason there is a cache miss for the request,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandler(fallbackToNetwork = true) {\n        return async ({ request }) => {\n            try {\n                const response = await this.matchPrecache(request);\n                if (response) {\n                    return response;\n                }\n                // This shouldn't normally happen, but there are edge cases:\n                // https://github.com/GoogleChrome/workbox/issues/1441\n                throw new WorkboxError('missing-precache-entry', {\n                    cacheName: this._cacheName,\n                    url: request instanceof Request ? request.url : request,\n                });\n            }\n            catch (error) {\n                if (fallbackToNetwork) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.debug(`Unable to respond with precached response. ` +\n                            `Falling back to network.`, error);\n                    }\n                    return fetch(request);\n                }\n                throw error;\n            }\n        };\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * If for an unexpected reason there is a cache miss when looking up `url`,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url, fallbackToNetwork = true) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        const handler = this.createHandler(fallbackToNetwork);\n        const request = new Request(url);\n        return () => handler({ request });\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching, directoryIndex, cleanURLs, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './getOrCreatePrecacheController.js';\nimport { generateURLVariations } from './generateURLVariations.js';\nimport '../_version.js';\n/**\n * This function will take the request URL and manipulate it based on the\n * configuration options.\n *\n * @param {string} url\n * @param {Object} options\n * @return {string} Returns the URL in the cache that matches the request,\n * if possible.\n *\n * @private\n */\nexport const getCacheKeyForURL = (url, options) => {\n    const precacheController = getOrCreatePrecacheController();\n    const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n    for (const possibleURL of generateURLVariations(url, options)) {\n        const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\n        if (possibleCacheKey) {\n            return possibleCacheKey;\n        }\n    }\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport '../_version.js';\n/**\n * Adds a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * NOTE: when called more than once this method will replace the previously set\n * configuration options. Calling it more than once is not recommended outside\n * of tests.\n *\n * @private\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {workbox.precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n */\nexport const addFetchListener = ({ ignoreURLParametersMatching = [/^utm_/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) => {\n    const cacheName = cacheNames.getPrecacheName();\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('fetch', ((event) => {\n        const precachedURL = getCacheKeyForURL(event.request.url, {\n            cleanURLs,\n            directoryIndex,\n            ignoreURLParametersMatching,\n            urlManipulation,\n        });\n        if (!precachedURL) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` +\n                    getFriendlyURL(event.request.url));\n            }\n            return;\n        }\n        let responsePromise = self.caches.open(cacheName).then((cache) => {\n            return cache.match(precachedURL);\n        }).then((cachedResponse) => {\n            if (cachedResponse) {\n                return cachedResponse;\n            }\n            // Fall back to the network if we don't have a cached response\n            // (perhaps due to manual cache cleanup).\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(precachedURL)} in ${cacheName} was not found. ` +\n                    `Falling back to the network instead.`);\n            }\n            return fetch(precachedURL);\n        });\n        if (process.env.NODE_ENV !== 'production') {\n            responsePromise = responsePromise.then((response) => {\n                // Workbox is going to handle the route.\n                // print the routing details to the console.\n                logger.groupCollapsed(`Precaching is responding to: ` +\n                    getFriendlyURL(event.request.url));\n                logger.log(`Serving the precached url: ${precachedURL}`);\n                logger.groupCollapsed(`View request details here.`);\n                logger.log(event.request);\n                logger.groupEnd();\n                logger.groupCollapsed(`View response details here.`);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n                return response;\n            });\n        }\n        event.respondWith(responsePromise);\n    }));\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addFetchListener } from './utils/addFetchListener.js';\nimport './_version.js';\nlet listenerAdded = false;\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n    if (!listenerAdded) {\n        addFetchListener(options);\n        listenerAdded = true;\n    }\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst plugins = [];\nexport const precachePlugins = {\n    /*\n     * @return {Array}\n     * @private\n     */\n    get() {\n        return plugins;\n    },\n    /*\n     * @param {Array} newPlugins\n     * @private\n     */\n    add(newPlugins) {\n        plugins.push(...newPlugins);\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { precachePlugins } from './utils/precachePlugins.js';\nimport './_version.js';\nconst installListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    const plugins = precachePlugins.get();\n    event.waitUntil(precacheController.install({ event, plugins })\n        .catch((error) => {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Service worker installation failed. It will ` +\n                `be retried automatically during the next navigation.`);\n        }\n        // Re-throw the error to ensure installation fails.\n        throw error;\n    }));\n};\nconst activateListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    event.waitUntil(precacheController.activate());\n};\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof module:workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.addToCacheList(entries);\n    if (entries.length > 0) {\n        // NOTE: these listeners will only be added once (even if the `precache()`\n        // method is called multiple times) because event listeners are implemented\n        // as a set, where each listener must be unique.\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('install', installListener);\n        self.addEventListener('activate', activateListener);\n    }\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [addRoute() options]{@link module:workbox-precaching.addRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n"],"names":["self","_","e","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","methodName","normalizedRangeHeader","size","start","end","url","status","cacheName","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","defaultMethod","validMethods","normalizeHandler","handler","assert","handle","Route","match","RegExpRoute","regExp","RegExp","result","exec","href","origin","location","index","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","params","route","findMatchingRoute","debugMessages","push","_defaultHandler","forEach","msg","err","reject","_catchHandler","catch","get","matchResult","length","undefined","setDefaultHandler","setCatchHandler","registerRoute","has","set","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","pluginUtils","plugins","callbackName","plugin","_getEffectiveRequest","mode","cacheKeyWillBeUsedPlugins","effectiveRequest","call","_isResponseSafeToCache","response","responseToCache","pluginsUsed","pluginMethod","Response","matchWrapper","matchOptions","cache","caches","open","cachedResponse","putWrapper","updatePlugins","oldResponse","put","newResponse","cacheWrapper","wrappedFetch","fetchOptions","FetchEvent","preloadResponse","possiblePreloadResponse","failedFetchPlugins","originalRequest","clone","requestClone","pluginFilteredRequest","fetchResponse","fetch","fetchWrapper","strategyStart","strategyName","printFinalResponse","CacheFirst","options","_cacheName","_plugins","_fetchOptions","_matchOptions","logs","_getFromNetwork","responseClone","cachePutPromise","cacheOkAndOpaquePlugin","cacheWillUpdate","NetworkFirst","isUsingCacheWillUpdate","some","_networkTimeoutSeconds","networkTimeoutSeconds","promises","timeoutId","id","promise","_getTimeoutPromise","networkPromise","_getNetworkPromise","race","timeoutPromise","resolve","onNetworkTimeout","_respondFromCache","setTimeout","clearTimeout","cachePut","supportStatus","canConstructResponseFromBodyStream","testResponse","body","copyResponse","modifier","clonedResponse","responseInit","headers","Headers","statusText","modifiedResponseInit","blob","REVISION_SEARCH_PARAM","createCacheKey","urlObject","cacheKey","revision","cacheKeyURL","originalURL","searchParams","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","addToCacheList","entries","urlsToWarnAbout","cacheMode","integrity","warningMessage","install","toBePrecached","alreadyPrecached","alreadyCachedRequests","existingCacheKeys","precacheRequests","_addURLToCache","updatedURLs","notUpdatedURLs","activate","currentlyCachedRequests","expectedCacheKeys","values","delete","credentials","cacheWillUpdatePlugin","isValidResponse","redirected","ignoreSearch","getURLsToCacheKeys","getCachedURLs","getCacheKeyForURL","matchPrecache","createHandler","fallbackToNetwork","createHandlerBoundToURL","precacheController","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","urlsToCacheKeys","possibleURL","possibleCacheKey","precachedURL","listenerAdded","addRoute","precachePlugins","add","newPlugins","installListener","activateListener","precacheAndRoute"],"mappings":"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"}